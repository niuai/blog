(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{409:function(t,s,e){"use strict";e.r(s);var a=e(45),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"一个镜像-容器-中启动多个-web-实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一个镜像-容器-中启动多个-web-实例"}},[t._v("#")]),t._v(" 一个镜像（容器）中启动多个 Web 实例")]),t._v(" "),e("p",[t._v("通常情况下一个镜像只会运行一个Web实例，本文展示如何在一个镜像中运行多个实例")]),t._v(" "),e("blockquote",[e("p",[t._v("注意：不知道此种情况如果一个Web实例挂了，会不会使容器重启。。。慎用。也有类似的例子："),e("a",{attrs:{href:"https://hub.docker.com/r/sebp/elk",target:"_blank",rel:"noopener noreferrer"}},[t._v("sebp/elk"),e("OutboundLink")],1),t._v("，同时有着三个服务。可以定义容器的存活探针，如果任何一个服务无法访问，则告诉Docker该容器需要重启")])]),t._v(" "),e("h2",{attrs:{id:"创建解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建解决方案"}},[t._v("#")]),t._v(" 创建解决方案")]),t._v(" "),e("p",[t._v("创建带有两个 Web 项目的 .NET Core 解决方案，在项目根目录添加 Dockerfile 文件")]),t._v(" "),e("div",{staticClass:"language-Dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" mcr.microsoft.com/dotnet/core/aspnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("buster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim AS base\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 443\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" mcr.microsoft.com/dotnet/core/sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("buster AS build\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /src\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.Sample/DotNetCore.Sample.csproj"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.Sample/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet restore "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.Sample/DotNetCore.Sample.csproj"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.SubWeb/DotNetCore.SubWeb.csproj"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.SubWeb/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet restore "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.SubWeb/DotNetCore.SubWeb.csproj"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" . .\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/src/DotNetCore.Sample"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet build "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.Sample.csproj"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c Release "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("o /app/build\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/src/DotNetCore.SubWeb"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet build "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.SubWeb.csproj"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c Release "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("o /app/build\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/src"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" build AS publish\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet publish "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.Sample/DotNetCore.Sample.csproj"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c Release "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("o /app/publish\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" dotnet publish "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DotNetCore.SubWeb/DotNetCore.SubWeb.csproj"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c Release "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("o /app/publish\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" start.sh /app/publish\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" base AS final\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=publish /app/publish .\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/start.sh"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h2",{attrs:{id:"准备脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备脚本"}},[t._v("#")]),t._v(" 准备脚本")]),t._v(" "),e("p",[t._v("通常情况下，从命令行启动 .NET Core 项目只能启动一个 Web 实例，即使在脚本中多行分别启动多个 Web，也只有第一个才会启动（此时如果 Ctrl + C 退出会启动下一个 Web）。因此需要以后台任务的方式来启动 Web 实例，利用 bash 中的 "),e("code",[t._v("&")]),t._v(" 来开启一个新的任务（PowerShell 下开启新的任务是 Start-Process），类似的脚本如下")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\ndotnet ./DotNetCore.Sample.dll --urls http://0.0.0.0:80 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\ndotnet ./DotNetCore.SubWeb.dll --urls http://0.0.0.0:8080\n")])])]),e("p",[t._v("需要注意的是，在 Windows 系统下创建的 .sh 文件的编码格式可能与linux的不兼容，导致在容器中运行脚本的时候报错：bin/sh^M: bad interpreter: No such file or directory。可以通过 Git Bash 来修改文件的编码格式")]),t._v(" "),e("ol",[e("li",[t._v("打开 Git Bash，运行 "),e("code",[t._v("vim start.sh")]),t._v(" 来修改文件编码（可以看到此时文件的编码是 doc）")]),t._v(" "),e("li",[t._v("执行 "),e("code",[t._v(":set ff=unix")]),t._v(" 或 "),e("code",[t._v(":set fileformat=unix")]),t._v("（文件编码变为 unix）")]),t._v(" "),e("li",[e("code",[t._v(":wq")]),t._v(" 保存退出")])]),t._v(" "),e("h2",{attrs:{id:"构建镜像、执行容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像、执行容器"}},[t._v("#")]),t._v(" 构建镜像、执行容器")]),t._v(" "),e("p",[t._v("运行以下命令来验证结果")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker build -t example -f Dockerfile "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker run -it --name example -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 example\n")])])]),e("p",[t._v("代码仓库："),e("a",{attrs:{href:"https://github.com/niuai/DotNetCore.Sample/tree/multiple-instance-one-image",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/niuai/DotNetCore.Sample/tree/multiple-instance-one-image"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);