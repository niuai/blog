(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{376:function(t,a,s){t.exports=s.p+"assets/img/add-machine-learning.4143c2f4.gif"},377:function(t,a,s){t.exports=s.p+"assets/img/model-builder-generated-code.b0d86e0d.png"},416:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"ml-net-简单使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ml-net-简单使用"}},[t._v("#")]),t._v(" ML.NET 简单使用")]),t._v(" "),e("p",[t._v("ML.NET是一个针对.NET开发人员使用的机器学习框架，使用它可以快速的搭建出一个sample。")]),t._v(" "),e("h2",{attrs:{id:"下载安装vs应用扩展-ml-net-model-builder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载安装vs应用扩展-ml-net-model-builder"}},[t._v("#")]),t._v(" 下载安装VS应用扩展（ML.NET Model Builder）")]),t._v(" "),e("blockquote",[e("p",[t._v("目前 ML.NET Model Builder 处于预览状态")])]),t._v(" "),e("p",[t._v("下载链接："),e("a",{attrs:{href:"http://aka.ms/mlnettemplates",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://aka.ms/mlnettemplates"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"创建一个-net-core-的控制台应用程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建一个-net-core-的控制台应用程序"}},[t._v("#")]),t._v(" 创建一个 .NET Core 的控制台应用程序")]),t._v(" "),e("blockquote",[e("p",[t._v("官网强调项目和solution不能放在一个目录下，也还没试过放在一起会怎样。。")])]),t._v(" "),e("p",[t._v("创建完项目后，右键项目点击 "),e("code",[t._v("Add")]),t._v(" -> "),e("code",[t._v("Machine Learning")]),t._v("，之后VS的主界面会出现step-by-step的引导步骤，帮助你创建sample。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(376),alt:"add-machine-learning"}})]),t._v(" "),e("h2",{attrs:{id:"选择机器学习的模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择机器学习的模型"}},[t._v("#")]),t._v(" 选择机器学习的模型")]),t._v(" "),e("p",[t._v("首先会让你选择训练的模型，目前该扩展提供了一些常见的模型（具体的应用场景），比如：语义分析（积极、消极）、GitHub Issue分类、价格预测等等。这里选择语义分析（Sentiment Analysis）")]),t._v(" "),e("h2",{attrs:{id:"下载训练集数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载训练集数据"}},[t._v("#")]),t._v(" 下载训练集数据")]),t._v(" "),e("p",[t._v("下载 "),e("a",{attrs:{href:"https://raw.githubusercontent.com/dotnet/machinelearning/master/test/data/wikipedia-detox-250-line-data.tsv",target:"_blank",rel:"noopener noreferrer"}},[t._v("wikipedia-detox-250-line-data.tsv"),e("OutboundLink")],1),t._v("，该文件的第一列表示 "),e("code",[t._v("Label")]),t._v("（预测结果），第二列表示 "),e("code",[t._v("Feature")]),t._v("（用来预测的根据）")]),t._v(" "),e("p",[t._v("在Model Builder里选择添加数据（目前支持本地文件和SQL Server），选择刚刚下载的 "),e("code",[t._v("wikipedia-detox-250-line-data.tsv")]),t._v(" 文件。"),e("strong",[t._v("Column to predict (Label)")]),t._v(" 选择第一列 "),e("code",[t._v("Sentiment")]),t._v("，"),e("strong",[t._v("Input Column (Feature)")]),t._v(" 选择剩余的其他列（第二列）。点击 "),e("code",[t._v("Train")]),t._v(" 进入下一步。")]),t._v(" "),e("h2",{attrs:{id:"训练你的模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#训练你的模型"}},[t._v("#")]),t._v(" 训练你的模型")]),t._v(" "),e("p",[t._v("Model Builder会根据已有的算法来对选择的模型进行评估，最终给出各个算法的比较以及最佳算法。")]),t._v(" "),e("p",[t._v("填入给Model Builder训练数据的时间（10 sec，如果是大一些的数据集，你应该设置一个更大的时间），点击开始训练。以下是训练过程中的指标")]),t._v(" "),e("ul",[e("li",[t._v("Status，训练状态，剩余时间，是否完成")]),t._v(" "),e("li",[t._v("Best accuracy，最好的拟合度")]),t._v(" "),e("li",[t._v("最优算法，原文是 “performed the best”（表现得最好），不知道是不是拟合度最高，或是其他的综合指标")])]),t._v(" "),e("p",[t._v("点击 "),e("code",[t._v("Evaluate")]),t._v(" 进入下一步")]),t._v(" "),e("h2",{attrs:{id:"评估你的模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#评估你的模型"}},[t._v("#")]),t._v(" 评估你的模型")]),t._v(" "),e("p",[t._v("这会列出Model Builder用了哪些算法来评估你的模型，包括总结和各个算法列表（最多5个）。你可在 "),e("strong",[t._v("Try your model")]),t._v(" 测试你的模型，输入文字，点击 "),e("strong",[t._v("Predict")]),t._v(" 来预测句子的情感。")]),t._v(" "),e("p",[t._v("点击 "),e("code",[t._v("Code")]),t._v(" 进入下一步（让你能在程序中通过以调用方法的形式来用该训练模型预测语义）")]),t._v(" "),e("h2",{attrs:{id:"生成相关代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成相关代码"}},[t._v("#")]),t._v(" 生成相关代码")]),t._v(" "),e("p",[e("img",{attrs:{src:s(377),alt:"model-builder-generated-code"}})]),t._v(" "),e("ul",[e("li",[t._v("{myMLAppML}.ConsoleApp，控制台应用，"),e("code",[t._v("ModelBuilder.cs")]),t._v("：生成、训练，"),e("code",[t._v("Program.cs")]),t._v("：测试、运行模型")]),t._v(" "),e("li",[t._v("{myMLAppML}.Model，.NET Standard类库，"),e("code",[t._v("ModelInput.cs")]),t._v(", "),e("code",[t._v("ModelOutput.cs")]),t._v(" 输入、输出，"),e("code",[t._v("ConsumeModel.cs")]),t._v(" 被调用方法，"),e("code",[t._v("MLModel.zip")]),t._v("(trained serialized ML model，暂不知怎么去理解这个文件)")])]),t._v(" "),e("h2",{attrs:{id:"在程序中调用模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在程序中调用模型"}},[t._v("#")]),t._v(" 在程序中调用模型")]),t._v(" "),e("p",[t._v("在一开始的控制台应用（不是Model Builder生成的那个）的 "),e("code",[t._v("Program.cs")]),t._v("，替换成以下内容：")]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("MyMLAppML"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("myMLApp")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Program")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add input data")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" input "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("ModelInput")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SentimentText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"That is rude."')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load model and predict output of sample data")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelOutput")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConsumeModel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Predict")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('$"Text: ')]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SentimentText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\\nIs Toxic: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Prediction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("运行，你就可以看到输出结果了。")]),t._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("p",[t._v("你现在可以尝试其他的模型，比如价格预测，对应的训练数据集："),e("a",{attrs:{href:"https://raw.githubusercontent.com/dotnet/machinelearning-samples/master/samples/csharp/getting-started/Regression_TaxiFarePrediction/TaxiFarePrediction/Data/taxi-fare-train.csv",target:"_blank",rel:"noopener noreferrer"}},[t._v("Taxi Fare dataset"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("原文："),e("a",{attrs:{href:"https://dotnet.microsoft.com/learn/ml-dotnet/get-started-tutorial/intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("ML.NET Tutorial - Get started in 10 minutes"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);